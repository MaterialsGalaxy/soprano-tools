<tool id="soprano_plotnmr" name="Soprano Plot NMR" version="@TOOL_VERSION@+galaxy@WRAPPER_VERSION@" python_template_version="3.5" profile="21.05">
    <description>Plot the NMR spectrum from a .magres file.</description>
    <macros>
        <!-- TODO: Needs a proper versioned release of Soprano before this can be released -->
        <token name="@TOOL_VERSION@">0.8.13b</token>
        <token name="@WRAPPER_VERSION@">0</token>
        <xml name="elements">
            <!-- Period 1 -->
            <option value="H">H</option>
            <option value="He">He</option>
            <!-- Period 2 -->
            <option value="Li">Li</option>
            <option value="Be">Be</option>
            <option value="B">B</option>
            <option value="C">C</option>
            <option value="N">N</option>
            <option value="O">O</option>
            <option value="F">F</option>
            <option value="Ne">Ne</option>
            <!-- Period 3 -->
            <option value="Na">Na</option>
            <option value="Mg">Mg</option>
            <option value="Al">Al</option>
            <option value="Si">Si</option>
            <option value="P">P</option>
            <option value="S">S</option>
            <option value="Cl">Cl</option>
            <option value="Ar">Ar</option>
            <!-- Period 4 -->
            <option value="K">K</option>
            <option value="Ca">Ca</option>
            <option value="Sc">Sc</option>
            <option value="Ti">Ti</option>
            <option value="V">V</option>
            <option value="Cr">Cr</option>
            <option value="Mn">Mn</option>
            <option value="Fe">Fe</option>
            <option value="Co">Co</option>
            <option value="Ni">Ni</option>
            <option value="Cu">Cu</option>
            <option value="Zn">Zn</option>
            <option value="Ga">Ga</option>
            <option value="Ge">Ge</option>
            <option value="As">As</option>
            <option value="Se">Se</option>
            <option value="Br">Br</option>
            <option value="Kr">Kr</option>
            <!-- Period 5 -->
            <option value="Rb">Rb</option>
            <option value="Sr">Sr</option>
            <option value="Y">Y</option>
            <option value="Zr">Zr</option>
            <option value="Nb">Nb</option>
            <option value="Mo">Mo</option>
            <option value="Tc">Tc</option>
            <option value="Ru">Ru</option>
            <option value="Rh">Rh</option>
            <option value="Pd">Pd</option>
            <option value="Ag">Ag</option>
            <option value="Cd">Cd</option>
            <option value="In">In</option>
            <option value="Sn">Sn</option>
            <option value="Sb">Sb</option>
            <option value="Te">Te</option>
            <option value="I">I</option>
            <option value="Xe">Xe</option>
            <!-- Period 6 -->
            <option value="Cs">Cs</option>
            <option value="Ba">Ba</option>
            <option value="La">La</option>
            <option value="Ce">Ce</option>
            <option value="Pr">Pr</option>
            <option value="Nd">Nd</option>
            <option value="Pm">Pm</option>
            <option value="Sm">Sm</option>
            <option value="Eu">Eu</option>
            <option value="Gd">Gd</option>
            <option value="Tb">Tb</option>
            <option value="Dy">Dy</option>
            <option value="Ho">Ho</option>
            <option value="Er">Er</option>
            <option value="Tm">Tm</option>
            <option value="Yb">Yb</option>
            <option value="Lu">Lu</option>
            <option value="Hf">Hf</option>
            <option value="Ta">Ta</option>
            <option value="W">W</option>
            <option value="Re">Re</option>
            <option value="Os">Os</option>
            <option value="Ir">Ir</option>
            <option value="Pt">Pt</option>
            <option value="Au">Au</option>
            <option value="Hg">Hg</option>
            <option value="Tl">Tl</option>
            <option value="Pb">Pb</option>
            <option value="Bi">Bi</option>
            <option value="Po">Po</option>
            <option value="At">At</option>
            <option value="Rn">Rn</option>
            <!-- Period 7 -->
            <option value="Fr">Fr</option>
            <option value="Ra">Ra</option>
            <option value="Ac">Ac</option>
            <option value="Th">Th</option>
            <option value="Pa">Pa</option>
            <option value="U">U</option>
            <option value="Np">Np</option>
            <option value="Pu">Pu</option>
            <option value="Am">Am</option>
            <option value="Cm">Cm</option>
            <option value="Bk">Bk</option>
            <option value="Cf">Cf</option>
            <option value="Es">Es</option>
            <option value="Fm">Fm</option>
            <option value="Md">Md</option>
            <option value="No">No</option>
            <option value="Lr">Lr</option>
            <option value="Rf">Rf</option>
            <option value="Db">Db</option>
            <option value="Sg">Sg</option>
            <option value="Bh">Bh</option>
            <option value="Hs">Hs</option>
            <option value="Mt">Mt</option>
            <option value="Ds">Ds</option>
            <option value="Rg">Rg</option>
            <option value="Cn">Cn</option>
            <option value="Nh">Nh</option>
            <option value="Fl">Fl</option>
            <option value="Mc">Mc</option>
            <option value="Lv">Lv</option>
            <option value="Ts">Ts</option>
            <option value="Og">Og</option>
        </xml>
        <import>macros.xml</import>
    </macros>
    <creator>
        <person givenName="Patrick" familyName="Austin" url="https://github.com/patrick-austin" identifier="https://orcid.org/0000-0002-6279-7823"/>
    </creator>
    <requirements>
        <requirement type="package" version="@TOOL_VERSION@">soprano</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        ln -s '$input' input.magres &&
        soprano plotnmr
            --symprec '$symprec'
            --precision '$precision'
            #if $isotopes:
                --isotopes '$isotopes'
            #end if
            #if $average_group:
                --average-group '$average_group'
            #end if
            --euler '$euler'
            #if $subset:
                --subset '$subset'
            #end if
            $reduce
            #if $query:
                --query '$query.replace("__gt__", ">").replace("__lt__", "<")'
            #end if
            --plot_type 2D
            #if $isonuclear.isonuclear == "isonuclear":
                --xelement '$isonuclear.xelement'
                --gradients '$isonuclear.xelement:$isonuclear.x_gradient'
                #if $isonuclear.x_reference is not None:
                    --references '$isonuclear.xelement:$isonuclear.x_reference'
                #end if
            #else:
                --xelement '$isonuclear.xelement'
                --yelement '$isonuclear.yelement'
                --gradients '$isonuclear.xelement:$isonuclear.x_gradient,$isonuclear.yelement:$isonuclear.y_gradient'
                #if $isonuclear.x_reference is not None and $isonuclear.y_reference is not None:
                    --references '$isonuclear.xelement:$isonuclear.x_reference,$isonuclear.yelement:$isonuclear.y_reference'
                #elif $isonuclear.x_reference is not None:
                    --references '$isonuclear.xelement:$isonuclear.x_reference'
                #elif $isonuclear.y_reference is not None:
                    --references '$isonuclear.yelement:$isonuclear.y_reference'
                #end if
            #end if
            --rcut '$rcut'
            --yaxis-order '$yaxis_order'
            $shielding
            #if $plot_options.xlim.xlim == "manual":
                --xlim '$plot_options.xlim.min' '$plot_options.xlim.max'
            #end if
            #if $plot_options.ylim.ylim == "manual":
                --ylim '$plot_options.ylim.min' '$plot_options.ylim.max'
            #end if
            --marker '$plot_options.marker'
            --max-marker-size '$plot_options.max_marker_size'
            --scale-marker-by '$plot_options.scale_marker_by'
            $plot_options.legend
            $plot_options.diag
            $plot_options.grid
            $plot_options.connectors
            --output plot.$plot_options.plot_file_format
            input.magres
    ]]></command>
    <inputs>
        <expand macro="magres_input"/>
        <expand macro="common_options"/>
        <expand macro="common_options_nmr"/>
        <conditional name="isonuclear">
            <param name="isonuclear" type="select" display="radio" label="Isonuclear plot" help="Whether to plot the same element on each axis">
                <option value="anisonuclear" selected="true">Anisonuclear</option>
                <option value="isonuclear">Isonuclear</option>
            </param>
            <when value="anisonuclear">
                <param argument="--xelement" type="select" label="X element" help="Element to plot on the x axes.">
                    <expand macro="elements"/>
                </param>
                <param name="x_reference" type="float" label="X reference shielding" optional="true" help="Reference shielding for the X element (in ppm)."/>
                <param name="x_gradient" type="float" value="-1" label="X reference shielding gradient" optional="true" help="Reference shielding gradients for the X element."/>
                <param argument="--yelement" type="select" label="Y element" help="Element to plot on the y axes.">
                    <expand macro="elements"/>
                </param>
                <param name="y_reference" type="float" label="Y reference shielding" optional="true" help="Reference shielding for the Y element (in ppm)."/>
                <param name="y_gradient" type="float" value="-1" label="Y reference shielding gradient" optional="true" help="Reference shielding gradients for the Y element."/>
            </when>
            <when value="isonuclear">
                <param argument="--xelement" type="select" label="Element" help="Element to plot on both axes.">
                    <expand macro="elements"/>
                </param>
                <param name="x_reference" type="float" label="Reference shielding" optional="true" help="Reference shielding for selected element (in ppm)."/>
                <param name="x_gradient" type="float" value="-1" label="Reference shielding gradient" optional="true" help="Reference shielding gradients for selected element."/>
            </when>
        </conditional>
        <param argument="--rcut" type="float" value="10" min="0" label="Cut-off distance" help="Cut-off distance for plotting, in Angstrom."/>
        <!-- TODO: when is this relevant? Always or only for 1D/2D case? -->
        <param argument="--yaxis-order" type="select" display="radio" label="Y-axis order" help="Single (1Q) or double (2Q) quantum order for the y-axis.">
            <option value="1Q" selected="true">1Q</option>
            <option value="2Q">2Q</option>
        </param>
        <param argument="--shielding" type="boolean" checked="false" truevalue="--shielding" falsevalue="" label="Shielding" help="Force plot shielding (even if references are present). Default is to plot shifts if references are given but shielding if no references given."/>
        <section name="plot_options" title="Plot options">
            <conditional name="xlim">
                <param name="xlim" type="select" display="radio" label="X-limits">
                    <option value="default" selected="true">Default</option>
                    <option value="manual">Manual</option>
                </param>
                <when value="default"/>
                <when value="manual">
                    <param name="min" value="0" type="float" label="X-axis range minimum"/>
                    <param name="max" value="0" type="float" label="X-axis range maximum"/>
                </when>
            </conditional>
            <conditional name="ylim">
                <param name="ylim" type="select" display="radio" label="Y-limits">
                    <option value="default" selected="true">Default</option>
                    <option value="manual">Manual</option>
                </param>
                <when value="default"/>
                <when value="manual">
                    <param name="min" value="0" type="float" label="Y-axis range minimum"/>
                    <param name="max" value="0" type="float" label="Y-axis range maximum"/>
                </when>
            </conditional>
            <param argument="--marker" type="text" value="x" label="Marker type" help="Accepts any matplotlib marker type."/>
            <param argument="--max-marker-size" type="float" value="50" label="Maximum marker size"/>
            <param argument="--scale-marker-by" type="select" display="radio" label="Scale marker by" help="Scale marker size by chosen property.">
                <option value="fixed" selected="true">Fixed</option>
                <option value="distance">Distance</option>
                <option value="inversedistance">Inverse distance</option>
                <option value="dipolar">Dipolar</option>
            </param>
            <param argument="--legend" type="boolean" checked="true" truevalue="--legend" falsevalue="--no-legend" label="Legend" help="Show marker legend."/>
            <param argument="--diag" type="boolean" checked="true" truevalue="--diag" falsevalue="--no-diag" label="Plot diagonal" help="Plot diagonal line if the x and y elements are the same."/>
            <param argument="--grid" type="boolean" checked="true" truevalue="--grid" falsevalue="--no-grid" label="Grid lines" help="Show grid lines at the axis ticks."/>
            <!-- TODO: this should only appear if 2Q selected? -->
            <param argument="--connectors" type="boolean" checked="true" truevalue="--connectors" falsevalue="--no-connectors" label="Connectors" help="Show horizontal connectors between points in the case of a 2Q plot."/>
            <param argument="--ticklabels" type="boolean" checked="true" truevalue="--ticklabels" falsevalue="--no-ticklabels" label="Tick labels" help="Show tick labels."/>
            <param name="plot_file_format" type="select" display="radio" label="Plot file format" help="File format/extension to use for the output plot.">
                <!-- Actual list of supported formats (from matplotlib) -->
                <!-- eps, jpeg, jpg, pdf, pgf, png, ps, raw, rgba, svg, svgz, tif, tiff, webp -->
                <option value="png" selected="true">PNG</option>
                <option value="svg">SVG</option>
            </param>
        </section>
    </inputs>
    <outputs>
        <data name="plot_png" from_work_dir="plot.png" format="png" label="${tool.name} (PNG) on ${on_string}">
            <filter>plot_options["plot_file_format"] == "png"</filter>
        </data>
        <data name="plot_svg" from_work_dir="plot.svg" format="svg" label="${tool.name} (SVG) on ${on_string}">
            <filter>plot_options["plot_file_format"] == "svg"</filter>
        </data>
    </outputs>
    <tests>
        <!-- 1: PNG output -->
        <test expect_num_outputs="1">
            <param name="input" value="ethanol.magres" ftype="txt"/>
            <param name="isonuclear" value="anisonuclear"/>
            <param name="xelement" value="C"/>
            <param name="yelement" value="H"/>
            <param name="x_reference" value="170"/>
            <param name="y_reference" value="30"/>
            <output name="plot_png">
                <assert_contents>
                    <has_size value="56900" delta="100"/>
                </assert_contents>
            </output>
        </test>
        <!-- 2: SVG output -->
        <test expect_num_outputs="1">
            <param name="input" value="ethanol.magres" ftype="txt"/>
            <param name="isonuclear" value="anisonuclear"/>
            <param name="xelement" value="C"/>
            <param name="yelement" value="H"/>
            <param name="x_reference" value="170"/>
            <param name="y_reference" value="30"/>
            <param name="plot_file_format" value="svg"/>
            <!-- Allow lines_diff for date and (random) uids -->
            <output name="plot_png" file="defaults.svg" compare="diff" lines_diff="70"/>
        </test>
        <!-- 3: Query parameters replaced -->
        <test expect_num_outputs="1">
            <param name="input" value="ethanol.magres" ftype="txt"/>
            <param name="isonuclear" value="isonuclear"/>
            <param name="xelement" value="C"/>
            <param name="x_reference" value="170"/>
            <param name="query" value="MS_shielding &gt; 100 and MS_shielding &lt; 180"/>
            <output name="plot_png">
                <assert_contents>
                    <has_size value="68800" delta="100"/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[
        Usage: `soprano plotnmr [OPTIONS] [FILES]...`

        Plot the NMR spectrum from a .magres file.

        This work was facilitated by software tools (specifically Soprano) developed by the Collaborative Computing Project for NMR Crystallography, funded by EPSRC grant EP/T026642/1.
    ]]></help>
    <!-- TODO: Would be good to have a citation (bibtex/DOI supported) but website doesn't give one -->
    <citations/>
</tool>